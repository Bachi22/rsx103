---
- name: Setup Docker-ELK stack with custom configs
  hosts: all
  become: yes
  gather_facts: yes

  vars_files:
    - elk_secret.yml

  vars:
    ip_addr: "{{ ansible_default_ipv4.address }}"

  tasks:
    - name: Afficher la valeur de ip_addr détectée automatiquement
      debug:
        msg: "L'adresse IP utilisée est : {{ ip_addr }}"

    - name: Cloner le dépôt docker-elk
      git:
        repo: https://github.com/deviantony/docker-elk.git
        dest: /opt/docker-elk
        version: main

    - name: Copier le kibana.yml custom
      template:
        src: kibana.yml.j2
        dest: /opt/docker-elk/kibana/config/kibana.yml
        mode: '0644'

    - name: Copier le .env custom
      template:
        src: env.j2
        dest: /opt/docker-elk/.env
        mode: '0644'

    - name: Copier le fleet-compose.yml custom
      copy:
        src: fleet-compose.yml
        dest: /opt/docker-elk/extensions/fleet/fleet-compose.yml
        mode: '0644'

    - name: Lancement "Du setup"
      command: docker-compose -f /opt/docker-elk/docker-compose.yml up setup
      args:
        chdir: /opt/docker-elk
      register: install_output

    - name: Afficher la sortie de l'installation
      debug:
        msg: "{{ install_output.stdout }}"

    - name: Docker-compose up -d
      command: docker-compose -f /opt/docker-elk/docker-compose.yml -f /opt/docker-elk/extensions/fleet/fleet-compose.yml up -d
      args:
        chdir: /opt/docker-elk
      register: launch_output

    - name: Afficher la sortie de l'installation
      debug:
        msg: "{{ launch_output.stdout }}"

    - name: Is everything is working?
      command: docker ps
      register: verif_output

    - name: Afficher la sortie de l'installation
      debug:
        msg: "{{ verif_output.stdout }}"